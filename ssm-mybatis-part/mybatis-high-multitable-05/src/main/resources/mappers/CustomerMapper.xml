<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzzz.mapper.CustomerMapper">

<!--
       默认情况下：resultMap会自动映射单层的result标签（前提是列名和属性名相同，或开启了驼峰式映射并满足映射关系）
                 嵌套association | collection 不会自动映射result标签

       可以修改mybatis-config文件设置autoMappingBehavior = full开启完全自动映射
              这种情况下嵌套的association | collection中的result标签也会自动映射
-->
    <resultMap id="customerMap" type="customer">
        <id column="customer_id" property="customerId"/>
        <collection property="orderList" ofType="order">
            <id column="order_id" property="orderId"/>
        </collection>
    </resultMap>

<!--    <resultMap id="customerMap" type="customer">-->
<!--        <id column="customer_id" property="customerId"/>-->
<!--        <result column="customer_name" property="customerName"/>-->
<!--        &lt;!&ndash;    用collection给集合属性赋值-->
<!--                    property = 集合属性名-->
<!--                    ofType = 集合的泛型类型-->
<!--        &ndash;&gt;-->
<!--        <collection property="orderList" ofType="order">-->
<!--            <id column="order_id" property="orderId"/>-->
<!--            <result column="order_name" property="orderName"/>-->
<!--            <result column="customer_id" property="customerId"/>-->
<!--        &lt;!&ndash;      customer不要赋值了，本次只需要查一个客户对应的多个订单      &ndash;&gt;-->
<!--        </collection>-->
<!--    </resultMap>-->

    <select id="queryList" resultMap="customerMap" >
        select * from t_order tor join t_customer tur
            on tor.customer_id = tur.customer_id
    </select>
</mapper>