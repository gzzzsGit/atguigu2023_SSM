<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <settings>
<!--    开启了mybatis的日志输出，选择STDOUT_LOGGING就是控制台输出，还可以选log4j等    -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <setting name="autoMappingBehavior" value="FULL"/>
    </settings>

    <!-- 定义自己类的别名 -->
    <typeAliases>
            <!--    单独定义    -->
<!--        <typeAlias type="com.gzzz.pojo.Employee" alias="employee"/>-->
            <!--     批量将包下的类赋予别名，别名就是类的首字母小写       -->
        <package name="com.gzzz.pojo"/>
    </typeAliases>

    <!--  mybatis内部配置插件，可以将sql语句拦截，在执行前做修改  -->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <property name="helperDialect" value="mysql"/>
        </plugin>
    </plugins>

    <!-- environments表示配置Mybatis的开发环境，可以配置多个环境，在众多具体环境中，使用default属性指定实际运行时使用的环境。default属性的取值是environment标签的id属性的值。 -->
    <environments default="development">
        <!-- environment表示配置Mybatis的一个具体的环境 -->
        <environment id="development">
            <!-- Mybatis的内置的事务管理器
                 MANAGED 不会自动开启事务 | JDBC 自动开启事务，需要自己手动提交事务，sqlSession.commit();
             -->
            <transactionManager type="JDBC"/>
            <!-- 配置数据源
                type = POOLED mybatis帮助我们维护一个连接池 | UNPOOLED 每次都新建或释放链接
            -->
            <dataSource type="POOLED">
                <!-- 建立数据库连接的具体信息 -->
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis-example"/>
                <property name="username" value="root"/>
                <property name="password" value="Guo715168"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!-- Mapper注册：指定Mybatis映射文件的具体位置 -->
        <!--    批量mapper指定使用package标签
                    1. 要求Mapperxml文件和mapper接口的命名必须相同
                    2. 要求最终打包后xml文件和接口文件的位置相同，都在name属性的包下
                        解决办法：在resources文件夹下创建接口类相同的文件夹结构
                    注意： resources下直接创建多层文件夹需要使用/分割，如果用.分割，得到的是一层文件夹
        -->
        <package name="com.gzzz.mapper"/>
    </mappers>

</configuration>